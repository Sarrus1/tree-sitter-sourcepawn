======
sizeof
======

int Test() {
    return sizeof(a);
}

---

(source_file
    (function_declaration
        returnType: (type (builtin_type))
        name: (symbol)
        arguments: (argument_declarations)
        (block
            (return_statement
                (sizeof_expression type: (symbol))
                (semicolon)))))


===============================
sizeof - multidimensional array
===============================

int Test() {
    sizeof(this.foo);
    sizeof(a[][][]);
    sizeof(a[10][][]);
    return sizeof(a[]);
}

---

(source_file
    (function_declaration
        returnType: (type (builtin_type))
        name: (symbol)
        arguments: (argument_declarations)
        (block
            (expression_statement
                (sizeof_expression
                    type: (field_access
                    target: (this)
                    field: (symbol)))
                (semicolon))
            (expression_statement
                (sizeof_expression
                    type: (symbol)
                    type: (dimension)
                    type: (dimension)
                    type: (dimension))
                (semicolon))
            (expression_statement
                (sizeof_expression
                    type: (array_indexed_access
                    array: (symbol)
                    index: (int_literal))
                    type: (dimension)
                    type: (dimension))
                (semicolon))
            (return_statement
                (sizeof_expression
                    type: (symbol)
                    type: (dimension))
                (semicolon)))))


==========================
sizeof without parentheses
==========================

int Test() {
    return sizeof a;
}

---

(source_file
    (function_declaration
        returnType: (type (builtin_type))
        name: (symbol)
        arguments: (argument_declarations)
        (block
            (return_statement
                (sizeof_expression type: (symbol))
                (semicolon)))))