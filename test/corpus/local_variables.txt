============
declarations
============

void Test() {
    int number;
    float pointnumber;
    char character;
    bool boolean;
    char[] text = "lorem ipsum";
    float vec[3];
    bool active[MAXPLAYERS + 1];
    Action action;
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration (symbol))
                (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration (symbol))
                (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration (symbol))
                (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration (symbol))
                (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (dimension)
                (variable_declaration_no_dimension
                    (symbol)
                    (string_literal))
                (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration
                (symbol)
                (fixed_dimension (int_literal)))
                (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration
                (symbol)
                (fixed_dimension 
                    (binary_expression (symbol) (int_literal))))
                (semicolon))
            (variable_declaration_statement
                (type (symbol))
            (variable_declaration (symbol))
            (semicolon)))))


==============
initialization
==============

void Test() {
    int money = 5400;
    float percent = 67.3;
    char key = 'A';
    bool enabled = false;
    Handle handle = null;
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (variable_declaration_statement
            (type (builtin_type))
            (variable_declaration
                (symbol) (int_literal))
            (semicolon))
            (variable_declaration_statement
            (type (builtin_type))
            (variable_declaration
                (symbol) (float_literal))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
            (variable_declaration
                (symbol) (char_literal))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
            (variable_declaration
                (symbol) (bool_literal))
            (semicolon))
            (variable_declaration_statement
                (type (symbol))
            (variable_declaration
              (symbol) (null))
            (semicolon)))))


====================
array initialization
====================

void Test() {
    char[] text = "Hello world";
    int numbers[] = { 1, 2, 3 };
    float vec[3] = { 0.0, 14.2, 13.22 };
    bool client_has_stuff[MAXPLAYERS] = { true, ... };
    char[] name = new char[players*2];
    Action[] actions = new Action[maxActions];
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (variable_declaration_statement
            (type (builtin_type))
            (dimension)
            (variable_declaration_no_dimension
                (symbol) (string_literal))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration
                    (symbol)
                    (dimension)
                    (array_litteral
                    (int_literal)
                    (int_literal)
                    (int_literal)))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration
                    (symbol)
                    (fixed_dimension (int_literal))
                    (array_litteral
                        (float_literal)
                        (float_literal)
                        (float_literal)))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration
                    (symbol)
                    (fixed_dimension (symbol))
                    (array_litteral
                        (bool_literal)
                        (rest_operator)))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (dimension)
                (variable_declaration_no_dimension
                    (symbol)
                    (dynamic_array (builtin_type)
                    (fixed_dimension
                        (binary_expression
                        (symbol)
                        (int_literal)))))
            (semicolon))
            (variable_declaration_statement
                (type (symbol))
                (dimension)
                (variable_declaration_no_dimension
                    (symbol)
                    (dynamic_array
                        (symbol)
                        (fixed_dimension
                        (symbol))))
            (semicolon)))))


=============
storage class
=============

void Test() {
    static const int foo = 1;
    static const Action foo = 1;
    const int foo = 1;
    static Action foo;
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration_with_value
                    (symbol) (int_literal))
            (semicolon))
            (variable_declaration_statement
                (type (symbol))
                (variable_declaration_with_value
                    (symbol) (int_literal))
            (semicolon))
            (variable_declaration_statement
                (type (builtin_type))
                (variable_declaration_with_value
                    (symbol) (int_literal))
            (semicolon))
            (variable_declaration_statement
                (type (symbol))
                (variable_declaration (symbol))
            (semicolon)))))


=======================
multidimensional arrays
=======================

void Test(){
    Action[][] a;
    Action [] [] a;
    float vec[MAXPLAYERS][10];
    float vec [MAXPLAYERS] [10];
    int bla[][] = { {1,2,3}, {4,5,6}, {7,8,9} };
    char[][] name = new char[players*2][5];
}

---

   (source_file
      (function_declaration
        (type
          (builtin_type))
        (symbol)
        (argument_declarations)
        (block
          (variable_declaration_statement
            (type
              (symbol))
            (dimension)
            (dimension)
            (variable_declaration_no_dimension
              (symbol))
            (semicolon))
          (variable_declaration_statement
            (type
              (symbol))
            (dimension)
            (dimension)
            (variable_declaration_no_dimension
              (symbol))
            (semicolon))
          (variable_declaration_statement
            (type
              (builtin_type))
            (variable_declaration
              (symbol)
              (fixed_dimension
                (symbol))
              (fixed_dimension
                (int_literal)))
            (semicolon))
          (variable_declaration_statement
            (type
              (builtin_type))
            (variable_declaration
              (symbol)
              (fixed_dimension
                (symbol))
              (fixed_dimension
                (int_literal)))
            (semicolon))
          (variable_declaration_statement
            (type
              (builtin_type))
            (variable_declaration
              (symbol)
              (dimension)
              (dimension)
              (array_litteral
                (array_litteral
                  (int_literal)
                  (int_literal)
                  (int_literal))
                (array_litteral
                  (int_literal)
                  (int_literal)
                  (int_literal))
                (array_litteral
                  (int_literal)
                  (int_literal)
                  (int_literal))))
            (semicolon))
          (variable_declaration_statement
            (type
              (builtin_type))
            (dimension)
            (dimension)
            (variable_declaration_no_dimension
              (symbol)
              (dynamic_array
                (builtin_type)
                (fixed_dimension
                  (binary_expression
                    (symbol)
                    (int_literal)))
                (fixed_dimension
                  (int_literal))))
            (semicolon)))))


==================
old - declarations
==================

void Test() {
    new number;
    new Float:pointnumber;
}

---

(source_file
    (function_declaration
      (type (builtin_type))
      (symbol)
      (argument_declarations)
      (block
        (old_variable_declaration_statement
          (old_variable_declaration
            (symbol))
        (semicolon))
        (old_variable_declaration_statement
          (old_variable_declaration
            (old_type (old_builtin_type))
            (symbol))
        (semicolon)))))


====================
old - initialization
====================

void Test() {
    new number = 10;
    new Float:pointnumber = 10.0;
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (old_variable_declaration_statement
                (old_variable_declaration
                    (symbol)
                    (int_literal))
            (semicolon))
            (old_variable_declaration_statement
                (old_variable_declaration
                    (old_type (old_builtin_type))
                    (symbol)
                    (float_literal))
            (semicolon)))))


==========================
old - array initialization
==========================

void Test() {
    new String:foo[MAXPLAYERS+1] = "Lorem";
    new bool:foo[MAXPLAYERS+1] = { true, ...};
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (old_variable_declaration_statement
                (old_variable_declaration
                (old_type (old_builtin_type))
                (symbol)
                (fixed_dimension
                    (binary_expression
                        (symbol)
                        (int_literal)))
                (string_literal))
            (semicolon))
            (old_variable_declaration_statement
                (old_variable_declaration
                    (old_type (old_builtin_type))
                (symbol)
                (fixed_dimension
                    (binary_expression
                        (symbol)
                        (int_literal)))
                (array_litteral (bool_literal)
                (rest_operator)))
            (semicolon)))))


===================
old - storage class
===================

void Test() {
    new const Float:foo = 1.0;
    static Float:foo = 1.0;
}

---

(source_file
    (function_declaration
        (type (builtin_type))
        (symbol)
        (argument_declarations)
        (block
            (old_variable_declaration_statement
                (old_variable_declaration
                    (old_type (old_builtin_type))
                (symbol)
                (float_literal))
            (semicolon))
            (old_variable_declaration_statement
                (old_variable_declaration
                    (old_type (old_builtin_type))
                (symbol)
                (float_literal))
            (semicolon)))))