===========
simple enum
===========

enum NumberType
{
    NumberType_Int8,
    NumberType_Int16,
    NumberType_Int32
}

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries
            (enum_entry name: (symbol))
            (enum_entry name: (symbol))
            (enum_entry name: (symbol)))))


=====================
enum with start value
=====================

enum NumberType
{
    NumberType_Int8 = 1,
    NumberType_Int16,
    NumberType_Int32
}

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries
            (enum_entry name: (symbol) value: (int_literal))
            (enum_entry name: (symbol))
            (enum_entry name: (symbol)))))


=========================
enum with explicit values
=========================

enum NumberType
{
    NumberType_Int8 = 8,
    NumberType_Int16 = 16,
    NumberType_Int32 = 32
}

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries
            (enum_entry name: (symbol) value: (int_literal))
            (enum_entry name: (symbol) value: (int_literal))
            (enum_entry name: (symbol) value: (int_literal)))))


============================
enum with binary expressions
============================

enum NumberType
{
    NumberType_Int8 = (1<<4),
    NumberType_Int16 = 1<<5,
    NumberType_Int32 = 31 + 1
}

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries
            (enum_entry
                name: (symbol)
                value: (parenthesized_expression
                    (binary_expression
                        left: (int_literal)
                        right: (int_literal))))
            (enum_entry
                name: (symbol)
                value: (binary_expression
                    left: (int_literal)
                    right: (int_literal)))
            (enum_entry
                name: (symbol)
                value: (binary_expression
                    left: (int_literal)
                    right: (int_literal))))))


==============
anonymous enum
==============

enum
{
    Int8,
    Int16,
    Int32
}

---

(source_file
    (enum
        entries: (enum_entries
            (enum_entry name: (symbol))
            (enum_entry name: (symbol))
            (enum_entry name: (symbol)))))


=========================
enum with trailing commas
=========================

enum NumberType
{
    NumberType_Int8,
    NumberType_Int16,
    NumberType_Int32,
}

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries
            (enum_entry name: (symbol))
            (enum_entry name: (symbol))
            (enum_entry name: (symbol)))))


=========================
enum - optional semicolon
=========================

enum f_invulnmode {
    INVULNMODE_MORTAL,
};

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries (enum_entry name: (symbol)))
        (semicolon)))


=====================
enum - optional colon
=====================

enum FOO: {
    test,
};

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries (enum_entry name: (symbol)))
        (semicolon)))


=======================
array based enum struct
=======================

enum FOO
{
	qTARGETS[5],
};

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries 
            (enum_entry 
                name: (symbol)
                (fixed_dimension
                (int_literal))))
        (semicolon)))

======================
enum with type casting
======================

enum ChatColorInfo
{
	ChatColorInfo_Code,
	ChatColorInfo_Alternative,
	bool:ChatColorInfo_Supported,
	ChatColorSubjectType:ChatColorInfo_SubjectType
};

---

(source_file
    (enum
        name: (symbol)
        entries: (enum_entries 
            (enum_entry 
                name: (symbol))
            (enum_entry
                name: (symbol))
            (enum_entry
                type: (builtin_type)
                name: (symbol))
            (enum_entry
                type: (symbol)
                name: (symbol)))
        (semicolon)))


===============================
enum with custom incrementation
===============================

enum FOO (<<= 1)
{
    CONSTANT1,
    CONSTANT2,
    CONSTANT3
}

enum (+= 1000)
{
    TASK_ID_1 = 1000,
    TASK_ID_2,
    TASK_ID_3
}

---

(source_file
    (enum
        name: (symbol)
        (int_literal)
        entries: (enum_entries 
            (enum_entry 
                name: (symbol))
            (enum_entry
                name: (symbol))
            (enum_entry
                name: (symbol))))
    (enum
        (int_literal)
        entries: (enum_entries
            (enum_entry
                name: (symbol)
                value: (int_literal))
            (enum_entry
                name: (symbol))
            (enum_entry
                name: (symbol)))))
