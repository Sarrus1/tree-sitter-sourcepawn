=============
function call
=============

void Test() {
    MyFunc();
}

---

(source_file
  (function_declaration
    returnType: (type (builtin_type))
    name: (symbol)
    arguments: (argument_declarations)
    (block
        (expression_statement
            (function_call
                function: (symbol)
                arguments: (function_call_arguments))
            ))))


============================
function call with arguments
============================

void Test() {
    MyFunc1("test");
    MyFunc2("test", 2, &ref, myVar, 0.0, 0xFE, 0b01, 0o13);
}

---

(source_file
  (function_declaration
    returnType: (type (builtin_type))
    name: (symbol)
    arguments: (argument_declarations)
    (block
        (expression_statement
            (function_call
                function: (symbol)
                arguments: (function_call_arguments (string_literal)))
            )
        (expression_statement
            (function_call
                function: (symbol)
                arguments: (function_call_arguments
                    (string_literal)
                    (int_literal)
                    (symbol)
                    (symbol)
                    (float_literal)
                    (int_literal)
                    (int_literal)
                    (int_literal)))
            ))))


==================================
function call with named arguments
==================================

void Test() {
    MyFunc("test", .c = 2, .f = 2.13, .o = &outVar);
}

---

(source_file
  (function_declaration
    returnType: (type (builtin_type))
    name: (symbol)
    arguments: (argument_declarations)
    (block
        (expression_statement
            (function_call
                function: (symbol)
                arguments: (function_call_arguments
                    (string_literal)
                    (named_arg
                        name: (symbol)
                        value: (int_literal))
                    (named_arg
                        name: (symbol)
                        value: (float_literal))
                    (named_arg
                        name: (symbol)
                        value: (symbol))))
            ))))


===================================
function call with irgnore argument
===================================

void Test() {
    MyFunc("test", _, 2.13, _);
}

---

(source_file
  (function_declaration
    returnType: (type (builtin_type))
    name: (symbol)
    arguments: (argument_declarations)
    (block
        (expression_statement
            (function_call
                function: (symbol)
                arguments: (function_call_arguments
                    (string_literal)
                    (ignore_argument)
                    (float_literal)
                    (ignore_argument)))
            ))))


===========================
function call as expression
===========================

bool Test() {
    return 10 > CurrentCount();
}

---

(source_file
    (function_declaration
        returnType: (type (builtin_type))
        name: (symbol)
        arguments: (argument_declarations)
        (block
            (return_statement
                (binary_expression
                    left: (int_literal)
                    right: (function_call
                        function: (symbol)
                        arguments: (function_call_arguments)))
                ))))


=======================================
function call as function call argument
=======================================

void Test() {
    IncreaseCounter(CurrentCount());
}

---

(source_file
    (function_declaration
        returnType: (type (builtin_type))
        name: (symbol)
        arguments: (argument_declarations)
        (block
            (expression_statement
                (function_call
                    function: (symbol)
                    arguments: (function_call_arguments
                        (function_call
                            function: (symbol)
                            arguments: (function_call_arguments))))
                ))))


==============================
function call as initial value
==============================

int count = CurrentCount();

---

(source_file
    (global_variable_declaration type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (function_call
                function: (symbol)
                arguments: (function_call_arguments)))
        ))


===============================
function call from field access
===============================

void Test() {
    event.GetInt("userid");
}

---

(source_file
    (function_declaration
        returnType: (type (builtin_type))
        name: (symbol)
        arguments: (argument_declarations)
        (block
            (expression_statement
                (function_call
                        function: (field_access
                            target: (symbol)
                            field: (symbol))
                        arguments: (function_call_arguments (string_literal)))
                ))))