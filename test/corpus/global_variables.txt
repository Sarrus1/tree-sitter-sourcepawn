===========
declaration
===========

int number;
float pointnumber;
char character;
bool boolean;
float vec[3];
bool active[MAXPLAYERS + 1];
Action action;

---

(source_file
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (int_literal)))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (fixed_dimension
                (binary_expression
                    left: (symbol)
                    right: (int_literal))))
        (semicolon))
    (global_variable_declaration
        type: (type (symbol))
        (variable_declaration name: (symbol))
        (semicolon)))

==============
initialization
==============

int money = 5400;
int money = 5400
+1;
int money = 5400
+1
float percent = 67.3;
char key = 'A';
bool enabled = false;
Handle handle = null;

---

(source_file
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (int_literal))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (binary_expression
                left: (int_literal)
                right: (int_literal)))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (binary_expression
                left: (int_literal)
                right: (int_literal))))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (float_literal))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (char_literal))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (bool_literal))
        (semicolon))
    (global_variable_declaration
        type: (type (symbol))
        (variable_declaration
            name: (symbol)
            initialValue: (null))
        (semicolon)))


==========================
initialization - methodmap
==========================

ArrayList arr1 = new ArrayList();
ArrayList arr2 = new ArrayList(1, 5);

---

(source_file
    (global_variable_declaration
        type: (type (symbol))
        (variable_declaration
            name: (symbol)
            initialValue: (new_instance
                class: (symbol)
                arguments: (function_call_arguments)))
        (semicolon))
    (global_variable_declaration
        type: (type (symbol))
        (variable_declaration
            name: (symbol)
            initialValue: (new_instance
                class: (symbol)
                arguments: (function_call_arguments
                    (int_literal)
                    (int_literal))))
        (semicolon)))


====================
array initialization
====================

int numbers[] = { 1, 2, 3 };
float vec[3] = { 0.0, 14.2, 13.22 };
Action action[MAXPLAYERS] = { true, ... };

---

(source_file
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (dimension)
            initialValue: (array_litteral (int_literal) (int_literal) (int_literal)))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (int_literal))
            initialValue: (array_litteral (float_literal) (float_literal) (float_literal)))
        (semicolon))
    (global_variable_declaration
        type: (type (symbol))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (symbol))
            initialValue: (array_litteral (bool_literal) (rest_operator)))
        (semicolon)))


==========================
enum struct initialization
==========================

MyStruct s = {1, "test", 2.31, true, {1.0, 2.0, 3.0}, Plugin_Handled};

---

(source_file
    (global_variable_declaration
        type: (type (symbol))
        (variable_declaration
            name: (symbol)
            initialValue: (array_litteral
                (int_literal)
                (string_literal)
                (float_literal)
                (bool_literal)
                (array_litteral
                    (float_literal)
                    (float_literal)
                    (float_literal))
                (symbol)))
        (semicolon)))


=============
storage class
=============

const int a = 1;
static float b;
static bool c = false;
static const char d[] = "lorem";
public const int e;

---

(source_file
    (global_variable_declaration
        (variable_storage_class)
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (int_literal))
        (semicolon))
    (global_variable_declaration
        (variable_storage_class)
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        (variable_storage_class)
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (bool_literal))
        (semicolon))
    (global_variable_declaration
        (variable_storage_class)
        type: (type
            (builtin_type))
        (variable_declaration
            name: (symbol)
            (dimension)
            initialValue: (string_literal))
        (semicolon))
    (global_variable_declaration
        (variable_visibility)
        (variable_storage_class)
        type: (type
            (builtin_type))
        (variable_declaration
            name: (symbol))
        (semicolon)))


=======================
multidimensional arrays
=======================

float vec[MAXPLAYERS][10];
float vec [MAXPLAYERS] [10];
int bla[][] = { {1,2,3}, {4,5,6}, {7,8,9} };

---

(source_file
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (symbol))
            (fixed_dimension (int_literal)))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (symbol))
            (fixed_dimension (int_literal)))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (dimension)
            (dimension)
            initialValue: (array_litteral (array_litteral (int_literal) (int_literal) (int_literal)) (array_litteral (int_literal) (int_literal) (int_literal)) (array_litteral (int_literal) (int_literal) (int_literal))))
        (semicolon)))


==================
optional semicolon
==================

int i
bool b
float f = 2.3

---

(source_file
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol)))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol)))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (float_literal))))


===============================
multiple variables of same type
===============================

int a, b;
bool c, d = true;
float e = 12.92, f = 1.2, g = 82.00;
char h = 'c', i;
char j[10] = "whatever!", k[256];

---

(source_file
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration name: (symbol))
        (variable_declaration
            name: (symbol)
            initialValue: (bool_literal))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (float_literal))
        (variable_declaration
            name: (symbol)
            initialValue: (float_literal))
        (variable_declaration
            name: (symbol)
            initialValue: (float_literal))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            initialValue: (char_literal))
        (variable_declaration name: (symbol))
        (semicolon))
    (global_variable_declaration
        type: (type (builtin_type))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (int_literal))
            initialValue: (string_literal))
        (variable_declaration
            name: (symbol)
            (fixed_dimension (int_literal)))
        (semicolon)))


=================
old - declaration
=================

new a;
const a;
a;
new Float:b = 0.23;
Float:b = 0.23;
new a = 0
+1;
new bool:c;
new _:d = 2, Float:e, bool:f = true, String:g = 'c';
new Action:ac = INVALID_HANDLE;
Action:ac = INVALID_HANDLE;
vec[MAXPLAYERS + 1];
vec[];


---

(source_file
    (old_global_variable_declaration
        (old_variable_declaration name: (symbol))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration name: (symbol))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration name: (symbol))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            initialValue: (float_literal))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            initialValue: (float_literal))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            initialValue: (binary_expression
                left: (int_literal)
                right: (int_literal)))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            initialValue: (int_literal))
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol))
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            initialValue: (bool_literal))
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            initialValue: (char_literal))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (symbol))
            name: (symbol)
            initialValue: (symbol))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (symbol))
            name: (symbol)
            initialValue: (symbol))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            (fixed_dimension
                (binary_expression
                    left: (symbol)
                    right: (int_literal))))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            (dimension))
        (semicolon)))


============
old - arrays
============

new a[16];
new players[MAXPLAYERS + 1];
new String:d[12] = "hello world";
new Float:origin[3] = {1.0, 2.0, 3.0};
new numbers[] = {1, 3, 5, 7, 9};
static chatColorInfo[][ChatColorInfo] =
{
	// Code , alternative	, Is Supported?	Chat color subject type 		   Color name
	{ '\x01', 0	/* None	 */	, true,			ChatColorSubjectType_none,	},	// Orange
	{ '\x03', 9	/* Green */	, true,			ChatColorSubjectType:2		},	// Red
	{ '\x03', 9	/* Green */	, true,			ChatColorSubjectType_player	},	// Team
};


---

(source_file
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            (fixed_dimension (int_literal)))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            (fixed_dimension
            (binary_expression
                left: (symbol)
                right: (int_literal))))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            (fixed_dimension (int_literal))
            initialValue: (string_literal))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            (fixed_dimension (int_literal))
            initialValue: (array_litteral (float_literal) (float_literal) (float_literal)))
        (semicolon))
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            (dimension)
            initialValue: (array_litteral (int_literal) (int_literal) (int_literal) (int_literal) (int_literal)))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
            name: (symbol)
            (dimension)
            (fixed_dimension (symbol))
            initialValue: (array_litteral
                (comment)
                (array_litteral 
                    (char_literal (escape_sequence))
                    (int_literal)
                    (comment)
                    (bool_literal)
                    (symbol))
                (comment)
                (array_litteral
                    (char_literal (escape_sequence))
                (int_literal)
                (comment)
                (bool_literal)
                (old_type_cast
                    type: (old_type (symbol))
                    value: (int_literal)))
                (comment)
                (array_litteral
                    (char_literal (escape_sequence))
                    (int_literal)
                    (comment)
                    (bool_literal)
                    (symbol))
                (comment)))
        (semicolon)))


=============================
old - multidimensional arrays
=============================

new g_DefaultColors_c[7][4] = { {255,255,255,255}, {255,0,0,255}, {0,255,0,255}, {0,0,255,255}, {255,255,0,255}, {0,255,255,255}, {255,0,255,255} };

---

(source_file
    (old_global_variable_declaration
        (old_variable_declaration
            name: (symbol)
            (fixed_dimension (int_literal))
            (fixed_dimension (int_literal))
            initialValue: (array_litteral
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))
                (array_litteral (int_literal) (int_literal) (int_literal) (int_literal))))
        (semicolon)))


===================
old - storage class
===================

decl String:txt[256];
new const a = 2;
static bool:b = false;
static const base64_cFillChar			= '=';
static const String:base64_sTable[] =
  // 0000000000111111111122222222223333333333444444444455555555556666
  // 0123456789012345678901234567890123456789012345678901234567890123
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
static const base64_decodeTable[] = {
//  0   1   2   3   4   5   6   7   8   9
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   // 240 - 249
    0,  0,  0,  0,  0,  0                    // 250 - 256
};
static localIPRanges[] =
{
	10	<< 24,				// 10.
	127	<< 24 | 1		,	// 127.0.0.1
	127	<< 24 | 16	<< 16,	// 127.16.
	192	<< 24 | 168	<< 16,	// 192.168.
};

---

(source_file
    (old_global_variable_declaration
        (old_variable_declaration
        (old_type (old_builtin_type))
        (symbol)
        (fixed_dimension (int_literal)))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
        (symbol) (int_literal))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
        (old_type (old_builtin_type)) (symbol) (bool_literal))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
            (symbol)
            (char_literal))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
            (old_type (old_builtin_type))
            (symbol)
            (dimension)
            (comment)
            (comment)
            (string_literal))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
            (symbol)
            (dimension)
            (array_litteral
                (comment)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (comment)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (int_literal)
                (comment)))
        (semicolon))
    (old_global_variable_declaration
        (variable_storage_class)
        (old_variable_declaration
            (symbol)
            (dimension)
            (array_litteral
                (binary_expression
                    (int_literal)
                    (int_literal))
                (comment)
                (binary_expression
                (binary_expression
                (int_literal)
                (int_literal))
            (int_literal))
            (comment)
            (binary_expression
                (binary_expression
                    (int_literal)
                    (int_literal))
                (binary_expression
                    (int_literal)
                    (int_literal)))
            (comment)
            (binary_expression
                (binary_expression
                    (int_literal)
                    (int_literal))
                (binary_expression
                    (int_literal)
                    (int_literal)))
            (comment)))
        (semicolon)))


========================
old - optional semicolon
========================

new a
new bool:c = true
decl String:arg1[32]
new Handle:h = INVALID_HANDLE

---

(source_file
    (old_global_variable_declaration
        (old_variable_declaration name: (symbol)))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            initialValue: (bool_literal)))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (old_builtin_type))
            name: (symbol)
            (fixed_dimension (int_literal))))
    (old_global_variable_declaration
        (old_variable_declaration
            type: (old_type (symbol))
            name: (symbol)
            initialValue: (symbol))))