=======
typeset
=======

typeset Timer {
    function Action (Handle timer, Handle hndl);
    function Action (Handle timer);
}

---

(source_file
    (typeset
        name: (symbol)
        (typedef_expression
            returnType: (symbol)
            (typedef_args
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)
        (typedef_expression
            returnType: (symbol)
            (typedef_args
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)))


=============================
typeset with ending semicolon
=============================

typeset Timer {
    function Action (Handle timer, Handle hndl);
    function Action (Handle timer);
};

---

(source_file
    (typeset
        name: (symbol)
        (typedef_expression
            returnType: (symbol)
            (typedef_args
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)
        (typedef_expression
            returnType: (symbol)
            (typedef_args
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)
        (semicolon)))


=================================
typeset with wrapping parenthesis
=================================

typeset Timer {
    (function Action (Handle timer, Handle hndl));
    (function Action (Handle timer));
};

---

(source_file
    (typeset
        name: (symbol)
        (typedef_expression
            returnType: (symbol)
            (typedef_args
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)
        (typedef_expression
            returnType: (symbol)
            (typedef_args
                (typedef_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)
        (semicolon)))


========
funcenum
========

funcenum Timer {
  Action:public(Handle:Timer, Handle:hndl),
  Action:public(Handle:timer),
}

---


(source_file
    (funcenum
        name: (symbol)
        (funcenum_member
            returnType: (type
            (symbol))
            (functag_args
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))))
        (funcenum_member
            returnType: (type (symbol))
            (functag_args
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))))))


=======================
funcenum with semicolon
=======================

funcenum Timer {
  Action:public(Handle:Timer, Handle:hndl),
  Action:public(Handle:timer),
};

---


(source_file
    (funcenum
        name: (symbol)
        (funcenum_member
            returnType: (type
            (symbol))
            (functag_args
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))))
        (funcenum_member
            returnType: (type (symbol))
            (functag_args
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))))
        (semicolon)))


=======================
funcenum no return type
=======================

funcenum Timer {
  public(Handle:Timer, Handle:hndl),
  public(Handle:timer),
}

---


(source_file
    (funcenum
        name: (symbol)
        (funcenum_member
            (functag_args
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))))
        (funcenum_member
            (functag_args
                (functag_arg
                    type: (type (symbol))
                    name: (symbol))))))