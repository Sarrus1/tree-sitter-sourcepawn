=======
typedef
=======

typedef SrvCmd = function Action (int args);
typedef SrvCmd = function Action[MAXPLAYERS+1][](int args, const char[] args, int &foo);

---

(source_file
    (typedef
        name: (symbol)
        (typedef_expression
            returnType: (type (symbol))
            (argument_declarations
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))))))


=================================
typedef with wrapping parenthesis
=================================

typedef SrvCmd = (function Action (int args));

---

(source_file
    (typedef
        name: (symbol)
        (typedef_expression
            returnType: (type (symbol))
            (argument_declarations
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))))
        (semicolon)))


======================
typedef with semicolon
======================

typedef SrvCmd = function Action (int args);

---

(source_file
    (typedef
        name: (symbol)
        (typedef_expression
            returnType: (type (symbol))
            (argument_declarations
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))))
        (semicolon)))


===============================
typedef with multiple arguments
===============================

typedef CustomHandler =
    function void (
        Handle handle,
        int &flag, 
        int client,
        const char[] name,
        float health,
        bool visible,
        float position[3],
        any data);

---

(source_file
    (typedef
        name: (symbol)
        (typedef_expression
            returnType: (type (builtin_type))
            (argument_declarations
                (argument_declaration
                    type: (argument_type
                        (type (symbol)))
                    name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)) (dimension))
                    name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (type (builtin_type)))
                    name: (symbol)
                    (fixed_dimension (int_literal)))
                (argument_declaration
                    type: (argument_type
                        (type (any_type)))
                    name: (symbol))))
        (semicolon)))


=======
functag
=======

functag public Action:SrvCmd(args, &Handle:datapack)

---

(source_file
    (functag
        returnType: (old_type
            (symbol))
        name: (symbol)
        (argument_declarations
            (argument_declaration
                name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (old_type (symbol)))
                name: (symbol)))))


======================
functag with semicolon
======================

functag public Action:SrvCmd(args, &Handle:datapack);

---

(source_file
    (functag
        returnType: (old_type
            (symbol))
        name: (symbol)
        (argument_declarations
            (argument_declaration
                name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (old_type (symbol)))
                name: (symbol)))
        (semicolon)))


======================
functag no return type
======================

functag SrvCmd public(args, &Handle:datapack)

---

(source_file
    (functag
        name: (symbol)
        (argument_declarations
            (argument_declaration
                name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (old_type (symbol)))
                name: (symbol)))))


=====================================
functag no return type with semicolon
=====================================

functag SrvCmd public(args, &Handle:datapack);

---

(source_file
    (functag
        name: (symbol)
        (argument_declarations
            (argument_declaration
                name: (symbol))
                (argument_declaration
                    type: (argument_type
                        (old_type (symbol)))
                name: (symbol)))
        (semicolon)))


===============================
functag alternative declaration
===============================

functag Entity_ChangeOverTimeCallback bool:public(&entity, &Float:interval, &currentCall);

---

(source_file
    (functag
        name: (symbol)
        returnType: (old_type
            (old_builtin_type))
        (argument_declarations
            (argument_declaration
                type: (argument_type)
                name: (symbol))
            (argument_declaration
                type: (argument_type 
                    (old_type
                        (old_builtin_type)))
                name: (symbol))
            (argument_declaration
                type: (argument_type)
                name: (symbol)))
        (semicolon)))